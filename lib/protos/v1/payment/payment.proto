syntax = "proto3";

package e_wallet_microservices_v2;


option go_package = "e_wallet_microservices_v2/lib/protos/public/payment;payment";


import "google/api/annotations.proto"; 
import "google/protobuf/descriptor.proto";

// gRPC-Gateway OpenAPI (Swagger) annotations
import "protoc-gen-openapiv2/options/annotations.proto";
import "protoc-gen-openapiv2/options/openapiv2.proto"; 


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Aplikasimlm.com (Wallet API Endpoint)";
    version: "1.0";
    contact: {
      name: "Aplikasimlm.com";
      url: "https://github.com/tovankamil"; // GitHub profile is fine as URL
      email: "tovan.kamil@gmail.com";
    };
  };

  schemes: [HTTP, HTTPS]; 
  consumes: ["application/json"];
  produces: ["application/json"];

  // Example for security definition (if you need it for authentication)
  // security_definitions: {
  //    security: {
  //      key: "BearerAuth";
  //      value: {
  //        type: API_KEY;
  //        name: "Authorization";
  //        in: HEADER;
  //        description: "Bearer token for authentication";
  //      };
  //    };
  // };
  // security: {
  //    security_requirement: {
  //      key: "BearerAuth";
  //      value: [];
  //    };
  // };
};

service PaymentService {



  rpc TransferBalanceService(TransferBalanceRequest) returns (TransferBalanceResponse) {
    option (google.api.http) = {
      post: "/v1/payment/transfer",
      body: "*" 
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Transfer User Balance info";
      operation_id: "TransferBalanceService";
      tags: ["payment"]; 
      responses: {
        key: "200"
        value: {
          description: "Successful response";
          schema: {
            json_schema: {
            
              ref: ".e_wallet_microservices_v2.TransferBalanceResponse";
            }
          }
        }
      };
    };
  }
}

// Request message for updating user balance
message TransferBalanceRequest {
  string source_user_id = 1; // Source user ID or account
  string destination = 2; // Destination user ID or account
  double amount = 3; // Amount to add or deduct
}

message TransferBalanceResponse {
  bool success = 1; 
  double destination_amout = 2; 
}
